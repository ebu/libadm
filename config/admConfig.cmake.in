include(CMakeFindDependencyMacro)

@PACKAGE_INIT@

set_and_check(@PROJECT_NAME@_INCLUDE_DIRS "${PACKAGE_PREFIX_DIR}/@INSTALL_INCLUDE_DIR@")
set_and_check(@PROJECT_NAME@_LIBRARY_DIRS "${PACKAGE_PREFIX_DIR}/@INSTALL_LIB_DIR@")

find_dependency(Boost 1.57)

set(errorVar ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE)
set(foundVar ${CMAKE_FIND_PACKAGE_NAME}_FOUND)
set(findQuietly ${${CMAKE_FIND_PACKAGE_NAME}_FIND_QUIETLY})

if(${adm_USE_STATIC_LIBS})
  if(EXISTS "${CMAKE_CURRENT_LIST_DIR}/admTargetsStatic.cmake")
    include("${CMAKE_CURRENT_LIST_DIR}/admTargetsStatic.cmake")
  else()
    set(${errorVar} "Could not find static version of libadm.")
    set(${foundVar} FALSE)
    return()
  endif()
elseif(${adm_USE_SHARED_LIBS})
  if(EXISTS "${CMAKE_CURRENT_LIST_DIR}/admTargetsShared.cmake")
    include("${CMAKE_CURRENT_LIST_DIR}/admTargetsShared.cmake")
  else()
    set(${errorVar} "Could not find shared version of libadm.")
    set(${foundVar} FALSE)
    return()
endif()
else()
  if(EXISTS "${CMAKE_CURRENT_LIST_DIR}/admTargetsShared.cmake")
    include("${CMAKE_CURRENT_LIST_DIR}/admTargetsShared.cmake")
  else()
    include("${CMAKE_CURRENT_LIST_DIR}/admTargetsStatic.cmake")
  endif()
endif()

check_required_components(adm)

if(NOT findQuietly)
  get_target_property(adm_LOCATION_ONLY_FOR_DISPLAY adm LOCATION)
  message(STATUS "Found adm library ${adm_VERSION}: ${adm_LOCATION_ONLY_FOR_DISPLAY}")
endif()
